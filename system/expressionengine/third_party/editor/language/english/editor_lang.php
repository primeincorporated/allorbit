<?php if (!defined('BASEPATH')) die('No direct script access allowed');

$lang = array(
'editor'	=>	'Editor',
'editors'	=>	'Editors',
'editor_module_name'	=>	 'Editor',
'editor_module_description'=>'Adds redactor.js support to ExpressionEngine',

// General
'ed:yes'		=>	'Yes',
'ed:no'			=>	'No',
'ed:save'       =>  'Save',
'ed:def_settings'=> 'Default Settings',
'ed:label'  =>  'Label',
'ed:author' =>  'Author',
'ed:version' =>  'Version',
'ed:desc' =>  'Description',

'ed:editor_mcp'	=>	'Editor Control Panel',
'ed:editor_conf'	=>	'Editor Configurations',
'ed:new_conf'		=>	'New Configuration',
'ed:name'		=>	'Name',
'ed:no_editors'	=>	'No Editor configuration have been created..',
'ed:clone'		=>	'Duplicate',
'ed:delete'		=>	'Delete',

'ed:buttons'	=>	'Buttons',
'ed:buttons_avail'	=>	'Buttons Available',

'ed:custom'		=>	'Custom',
'ed:predefined'	=>	'Predefined',

// Settings
'ed:editor_settings'	=>	'Editor Settings',
'ed:toolbar_buttons'	=>	'Toolbar Buttons',
'ed:adv_settings'		=>	'Advanced Settings',
'ed:js_callbacks'		=>	'JS Callbacks',
'ed:height'	=>	'Height',
'ed:direction'	=>	'Directon',
'ed:ltr'		=>	'Left To Right',
'ed:rtl'		=>	'Right To Left',
'ed:enable_toolbar'	=>	'Enable Toolbar',
'ed:enable_source'	=>	'HTML source button on the toolbar',
'ed:focus'		=>	'Enable cursor focus on load',
'ed:autoresize'	=>	'Enable height autoresizing',
'ed:fixed'	=>	'Fixed Toolbar',
'ed:convertlinks'	=>	'Replace all URLs to hyperlinks',
'ed:convertdivs'	=>	'Replace all divs to paragraphs',
'ed:overlay'	=>	'Show overlay on modal windows',
'ed:linebreaks' => 'Linebreaks Mode',
'ed:linebreaks:exp' => 'In linebreaks mode, Redactor will markup text with "br" tag. Otherwise, Redactor will markup text with paragraphs.',
'ed:observeimages'	=>	'Show image settings on click',
'ed:key_shortcuts'  => 'Turns on/off keyboard shortcuts functionality',
'ed:air'	=>	'Enable Air-mode',
'ed:wym'	=>	'Enable Visual Structure',
'ed:protocol_links' => 'Add http:// protocol to all links',
'ed:allowedtags'	=>	'Allowed Tags',
'ed:allowedtags_custom'		=>	'Custom Allowed Tags (separate by comma)',
'ed:deniedtags'    =>  'Denied Tags',
'ed:deniedtags_custom'     =>  'Custom Denied Tags (separate by comma)',
'ed:default'	=>	'Default',
'ed:custom'		=>	'Custom',
'ed:plugins' => 'Extra Plugins',
'ed:plugins:exp' => 'Valid Plugins: fontcolor,fontsize,fullscreen,textdirection (separate by comma)',

'ed:convert_entries'	=>	'Convert previous entries?',
'ed:convert_entries_exp'	=>	'Editor can convert your previous entries field data to HTML',

'ed:upload_settings'	=>	'Upload Settings',
'ed:upload_service'		=>	'Upload Service',
'ed:file_upload_loc'	=>	'File Upload Location',
'ed:image_upload_loc'	=>	'Image Upload Location',
'ed:allow_img_browsing' =>  'Enable browsing existing images',
'ed:allow_img_subdir'   =>  'Allow Browsing of Subdirectories',
'ed:disabled'	=>	'DISABLED',
'ed:act_url'	=>	'ACT URL',
'ed:local'	=>	'Local',
'ed:s3'			=>	'S3',
'ed:s3:bucket_file'	=>	'S3 Bucket (Files)',
'ed:s3:bucket_image'=>	'S3 Bucket (Images)',
'ed:s3:aws_key'	=>	'Amazon Access Key',
'ed:s3:aws_secret_key'=>	'Amazon Secret Key',

'ed:category_settings'	=>	'Category Settings',

'ed:formattingtags' =>  'Formatting Tags',
'ed:language' => 'Language',
'ed:css_file'   =>  'Custom CSS File',
'ed:css_file:exp'   =>  'Separate multiple by a comma',
'ed:css_file:help' => 'Supply a URL to a valid CSS File. This option will force redactor.js to run in an iframe (initial loading is a tiny bit slower)',

'ed:js_callbacks:exp' => 'Supply a JS function name or write out a function e.g. function(){ console.log("hello"); }',
'ed:callback:init' => 'This callback is triggered after Redactor is launched.',
'ed:callback:enter' => 'This callback allows to catch Enter/Return key pressed in Redactor.',
'ed:callback:change' => 'This callback fires every time when content changes in Redactor.',
'ed:callback:pasteBefore' => 'This callback allows to get pasted code before clean on paste. You function must returns html.',
'ed:callback:pasteAfter' => 'This callback allows to get pasted code after clean on paste.',
'ed:callback:focus' => 'This callback is triggered when focus is set to Redactor editable area.',
'ed:callback:blur' => 'This callback is triggered when Redactor loses focus.',
'ed:callback:keyup' => 'This callback is triggered when a key is released.',
'ed:callback:keydown' => 'This callback is triggered when a key is pressed.',
'ed:callback:textareaKeydown' => 'This callback is triggered when a key is pressed in code view (in textarea).',
'ed:callback:syncBefore' => 'This callback is called before the synchronization of editable layer with text area. Your function must return html.',
'ed:callback:syncAfter' => 'This callback is called after the synchronization of the editable layer with textarea.',
'ed:callback:autosave' => 'This callback is triggered when request for an autosave has been completed.',
'ed:callback:imageUpload' => 'This callback is triggered on successful image upload.',
'ed:callback:imageUploadError' => 'This callback is triggered in case image upload ends up with an error.',
'ed:callback:fileUpload' => 'This callback is triggered on successful file upload.',
'ed:callback:fileUploadError' => 'This callback is triggered in case file upload ends up with an error.',

'ed:buttons'       =>   'Buttons',
'ed:btn_settings'   =>  'Button Settings',

'ed:btn:html'           => 'HTML',
'ed:btn:formatting'     => 'Formatting',
'ed:btn:bold'           => 'Bold',
'ed:btn:italic'         => 'Italic',
'ed:btn:deleted'        => 'Deleted',
'ed:btn:unorderedlist'  => 'Unordered List',
'ed:btn:orderedlist'    => 'Ordered List',
'ed:btn:outdent'        => 'Outdent',
'ed:btn:indent'         => 'Indent',
'ed:btn:image'          => 'Image',
'ed:btn:video'          => 'Video',
'ed:btn:file'           => 'File',
'ed:btn:table'          => 'Table',
'ed:btn:link'           => 'Link',
'ed:btn:alignleft'      => 'Align Left',
'ed:btn:aligncenter'    => 'Align Center',
'ed:btn:alignright'     => 'Align Right',
'ed:btn:alignjustify'   => 'Justify',
'ed:btn:horizontalrule' => 'Horizontal Rule',

// END
''=>''
);

/* End of file editor_lang.php */
/* Location: ./system/expressionengine/third_party/editor/editor_lang.php */

